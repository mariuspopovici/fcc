import { describe } from 'riteway';
import { str2bin, bin2str } from '../src/intermediate/binary-agents';

describe('str2bin()', async assert => {
  assert({
    given: "Aren't bonfires fun!?",
    should:
      'return 01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111',
    actual: str2bin("Aren't bonfires fun!?"),
    expected:
      '01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111'
  });

  assert({
    given: 'I love FreeCodeCamp!',
    should:
      'return 01001001 00100000 01101100 01101111 01110110 01100101 00100000 01000110 01110010 01100101 01100101 01000011 01101111 01100100 01100101 01000011 01100001 01101101 01110000 00100001',
    actual: str2bin('I love FreeCodeCamp!'),
    expected:
      '01001001 00100000 01101100 01101111 01110110 01100101 00100000 01000110 01110010 01100101 01100101 01000011 01101111 01100100 01100101 01000011 01100001 01101101 01110000 00100001'
  });
});

describe('bin2str()', async assert => {
  assert({
    given:
      '01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111',
    should: "return Aren't bonfires fun!?",
    actual: bin2str(
      '01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111'
    ),
    expected: "Aren't bonfires fun!?"
  });

  assert({
    given:
      '01001001 00100000 01101100 01101111 01110110 01100101 00100000 01000110 01110010 01100101 01100101 01000011 01101111 01100100 01100101 01000011 01100001 01101101 01110000 00100001',
    should: 'return I love FreeCodeCamp!',
    actual: bin2str(
      '01001001 00100000 01101100 01101111 01110110 01100101 00100000 01000110 01110010 01100101 01100101 01000011 01101111 01100100 01100101 01000011 01100001 01101101 01110000 00100001'
    ),
    expected: 'I love FreeCodeCamp!'
  });
});
